<?php

/** 
 * __isset() マジックメソッドについて
 * __isset() マジックメソッドは、isset() または empty() 関数がオブジェクトのプライベートやプロテクテッドなプロパティに
 * アクセスしようとしたときに自動的に呼び出されます。
 * このメソッドを使用することで、プロパティが設定されているかどうか（NULLでないかどうか）
 * または空かどうかをカスタマイズしてチェックすることができます。

 * 使用例
 * 以下の例では、User クラスに __isset() メソッドを実装しています。このメソッドは、
 * 指定されたキーが$data 配列内に存在するかどうかをチェックし
 * 結果を返します。これにより、外部からプライベートプロパティの存在を確認することが可能になります。
 */

class User
{
    private $data = [
        'name' => 'Alice',
        'age' => 25,
    ];

    // プロパティが存在するかどうかをチェックする
    public function __isset($key)
    {
        return isset($this->data[$key]);
    }
}

$user = new User();

// name プロパティが存在するかどうかをチェック
if (isset($user->name)) {
    echo "Name is set!\n";
} else {
    echo "Name is not set!\n";
}

 // 出力: "Name is set!"

// このコードでは、User クラスのインスタンス $user に対して isset() 関数を使用しています。
// $user->name にアクセスしようとすると、__isset() メソッドが自動的に呼び出され
// 'name' キーが $data 配列内に存在するかどうかをチェックします。
// この場合、'name' キーは存在するため、"Name is set!" が出力されます。

// このように、__isset() メソッドを使用することでクラスの外部からでもプライベートや
// プロテクテッドなプロパティの存在を安全に確認することができます。
